/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;
    Node() {}
    Node(int _val) {
        val = _val;
    }
    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> postorder(Node* root) {
        vector<int> postOrderTraversal;
        if(!root){
            return {};
        }
        stack<Node*> store;
        store.push(root);
        while(!store.empty()){
            root = store.top();
            store.pop();
            postOrderTraversal.push_back(root->val);
            for(int i=0; i<root->children.size(); i++){
                store.push(root->children[i]);
            }
        }
        reverse(postOrderTraversal.begin(), postOrderTraversal.end());
        return postOrderTraversal;
    }
};
